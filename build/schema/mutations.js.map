{"version":3,"sources":["../../server/schema/mutations.js"],"names":["graphql","require","GraphQLObjectType","GraphQLString","GraphQLID","mongoose","Movie","model","Review","MovieType","ReviewType","mutation","name","fields","addMovie","type","args","title","resolve","parentValue","save","then","response","catch","erreur","Error","addReviewToMovie","content","movieId","addReview","likeReview","id","like","deleteMovie","remove","_id","module","exports"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;IACQC,iB,GAAgDF,O,CAAhDE,iB;IAAmBC,a,GAA6BH,O,CAA7BG,a;IAAeC,S,GAAcJ,O,CAAdI,S;;AAC1C,IAAMC,WAAWJ,QAAQ,UAAR,CAAjB;AACA,IAAMK,QAAQD,SAASE,KAAT,CAAe,OAAf,CAAd;AACA,IAAMC,SAASH,SAASE,KAAT,CAAe,QAAf,CAAf;AACA,IAAME,YAAYR,QAAQ,cAAR,CAAlB;AACA,IAAMS,aAAaT,QAAQ,eAAR,CAAnB;;AAEA,IAAMU,WAAW,IAAIT,iBAAJ,CAAsB;AACrCU,QAAM,UAD+B;AAErCC,UAAQ;AACN;AACAC,cAAU;AACRC,YAAMN,SADE;AAERO,YAAM;AACJC,eAAO,EAAEF,MAAMZ,aAAR;AADH,OAFE;AAKRe,aALQ,mBAKAC,WALA,QAKwB;AAAA,YAATF,KAAS,QAATA,KAAS;;AAC9B,eAAQ,IAAIX,KAAJ,CAAU,EAAEW,YAAF,EAAV,CAAD,CAAuBG,IAAvB,GAA8BC,IAA9B,CAAoC,UAACC,QAAD,EAAc;AACvD,iBAAOA,QAAP;AACD,SAFM,EAEJC,KAFI,CAEG,UAACC,MAAD,EAAY;AACpB,iBAAO,IAAIC,KAAJ,CAAU,sBAAV,CAAP;AACD,SAJM,CAAP;AAKD;AAXO,KAFJ;AAeNC,sBAAkB;AAChB;AACAX,YAAMN,SAFU;AAGhBO,YAAM;AACJW,iBAAS,EAAEZ,MAAMZ,aAAR,EADL;AAEJyB,iBAAS,EAAEb,MAAMX,SAAR;AAFL,OAHU;AAOhBc,aAPgB,mBAORC,WAPQ,SAOwB;AAAA,YAAlBS,OAAkB,SAAlBA,OAAkB;AAAA,YAAVD,OAAU,SAAVA,OAAU;;;AAEtC,eAAOrB,MAAMuB,SAAN,CAAgBD,OAAhB,EAAyBD,OAAzB,CAAP;AACD;AAVe,KAfZ;AA2BNG,gBAAY;AACV;AACAf,YAAML,UAFI;AAGVM,YAAM,EAAEe,IAAI,EAAEhB,MAAMX,SAAR,EAAN,EAHI;AAIVc,aAJU,mBAIFC,WAJE,SAImB;AAAA,YAANY,EAAM,SAANA,EAAM;;AAC3B,eAAOvB,OAAOwB,IAAP,CAAYD,EAAZ,CAAP;AACD;AANS,KA3BN;AAmCNE,iBAAa;AACX;AACAlB,YAAMN,SAFK;AAGXO,YAAM,EAAEe,IAAI,EAAEhB,MAAMX,SAAR,EAAN,EAHK;AAIXc,aAJW,mBAIHC,WAJG,SAIkB;AAAA,YAANY,EAAM,SAANA,EAAM;;AAC3B,eAAOzB,MAAM4B,MAAN,CAAa,EAAEC,KAAKJ,EAAP,EAAb,CAAP;AACD;AANU;AAnCP;AAF6B,CAAtB,CAAjB;;AAgDAK,OAAOC,OAAP,GAAiB1B,QAAjB","file":"mutations.js","sourcesContent":["const graphql = require('graphql');\r\nconst { GraphQLObjectType, GraphQLString, GraphQLID } = graphql;\r\nconst mongoose = require('mongoose');\r\nconst Movie = mongoose.model('movie');\r\nconst Review = mongoose.model('review');\r\nconst MovieType = require('./movie_type');\r\nconst ReviewType = require('./review_type');\r\n\r\nconst mutation = new GraphQLObjectType({\r\n  name: 'Mutation',\r\n  fields: {\r\n    //ajout de film\r\n    addMovie: {\r\n      type: MovieType,\r\n      args: {\r\n        title: { type: GraphQLString }\r\n      },\r\n      resolve(parentValue, { title }) {\r\n        return (new Movie({ title })).save().then( (response) => {\r\n          return response;\r\n        }).catch( (erreur) => {\r\n          return new Error(\"Ce film existe d√©ja.\");\r\n        });\r\n      }\r\n    },\r\n    addReviewToMovie: {\r\n      // ajouter une review au film ayant l'id movieId\r\n      type: MovieType,\r\n      args: {\r\n        content: { type: GraphQLString },\r\n        movieId: { type: GraphQLID }\r\n      },\r\n      resolve(parentValue, {movieId,content}) {\r\n\r\n        return Movie.addReview(movieId, content);\r\n      }\r\n    },\r\n    likeReview: {\r\n      //liker une review par son id\r\n      type: ReviewType,\r\n      args: { id: { type: GraphQLID } },\r\n      resolve(parentValue, { id }) {\r\n        return Review.like(id);\r\n      }\r\n    },\r\n    deleteMovie: {\r\n      // supprimer un film par son id\r\n      type: MovieType,\r\n      args: { id: { type: GraphQLID } },\r\n      resolve(parentValue, { id }) {\r\n        return Movie.remove({ _id: id });\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = mutation;\r\n"]}